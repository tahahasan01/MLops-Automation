pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                git 'https://github.com/tahahasan01/i211767_i211695.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t tahahasan01/mymlapp .'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withDockerRegistry([credentialsId: 'docker-hub-credentials', url: '']) {
                    sh 'docker tag tahahasan01/mymlapp tahahasan01/mymlapp:latest'
                    sh 'docker push tahahasan01/mymlapp:latest'
                }
            }
        }
    }

    post {
        success {
            emailext (
                to: 'tahahasan279@gmail.com',
                subject: "‚úÖ Jenkins Deployment Successful: ${JOB_NAME} #${BUILD_NUMBER}",
                body: """
                üöÄ **Jenkins successfully deployed your application!**

                - **Job Name:** ${JOB_NAME}
                - **Build Number:** ${BUILD_NUMBER}
                - **View Build Logs:** ${BUILD_URL}
                - **Docker Image:** `tahahasan01/mymlapp:latest`

                üéâ Your application is now live!
                """
            )
        }
        failure {
            emailext (
                to: 'tahahasan279@gmail.com',
                subject: "‚ùå Jenkins Deployment Failed: ${JOB_NAME} #${BUILD_NUMBER}",
                body: """
                üî¥ **Jenkins deployment has FAILED!**

                - **Job Name:** ${JOB_NAME}
                - **Build Number:** ${BUILD_NUMBER}
                - **Check logs here:** ${BUILD_URL}

                ‚ùó Please review the logs and fix the issue.
                """
            )
        }
    }
}
